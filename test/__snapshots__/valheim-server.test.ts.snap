// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
Object {
  "Resources": Object {
    "TestCluster4BB28665": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "disabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "TestGeneratedServerPasswordSecret16788AEC": Object {
      "Properties": Object {
        "GenerateSecretString": Object {
          "PasswordLength": 8,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "TestLoadBalancer2C77D7E0": Object {
      "DependsOn": Array [
        "TestVPCPublicSubnet1DefaultRoute59DE5C9B",
        "TestVPCPublicSubnet2DefaultRouteBF0B8D60",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "Subnets": Array [
          Object {
            "Ref": "TestVPCPublicSubnet1Subnet27931817",
          },
          Object {
            "Ref": "TestVPCPublicSubnet2Subnet3C04BDB2",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "TestLoadBalancerListenerE0D6931B": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TestLoadBalancerListenerTargetsGroup11BB5877",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "TestLoadBalancer2C77D7E0",
        },
        "Port": 2457,
        "Protocol": "UDP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "TestLoadBalancerListenerTargetsGroup11BB5877": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "TCP",
        "HealthyThresholdCount": 2,
        "Port": 2457,
        "Protocol": "UDP",
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "TestMyEfsFileSystem8F7C7AD3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Encrypted": true,
        "FileSystemTags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/MyEfsFileSystem",
          },
        ],
        "LifecyclePolicies": Array [
          Object {
            "TransitionToIA": "AFTER_14_DAYS",
          },
        ],
        "PerformanceMode": "generalPurpose",
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Retain",
    },
    "TestMyEfsFileSystemAccessPointA7707C5E": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "TestMyEfsFileSystem8F7C7AD3",
        },
        "RootDirectory": Object {},
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "TestMyEfsFileSystemEfsMountTarget1EBA8A901": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "TestMyEfsFileSystem8F7C7AD3",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "TestMyEfsFileSystemEfsSecurityGroup62B7FE57",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "TestVPCPrivateSubnet1Subnet9269A3EC",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "TestMyEfsFileSystemEfsMountTarget26A23B820": Object {
      "Properties": Object {
        "FileSystemId": Object {
          "Ref": "TestMyEfsFileSystem8F7C7AD3",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "TestMyEfsFileSystemEfsSecurityGroup62B7FE57",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "TestVPCPrivateSubnet2Subnet5C35C892",
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "TestMyEfsFileSystemEfsSecurityGroup62B7FE57": Object {
      "Properties": Object {
        "GroupDescription": "Default/Test/MyEfsFileSystem/EfsSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/MyEfsFileSystem",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TestMyEfsFileSystemEfsSecurityGroupfromTestSecurityGroupC82C8FB7204921585FFD": Object {
      "Properties": Object {
        "Description": "from TestSecurityGroupC82C8FB7:2049",
        "FromPort": 2049,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "TestMyEfsFileSystemEfsSecurityGroup62B7FE57",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "TestSecurityGroupA462EC75",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "TestSecurityGroupA462EC75": Object {
      "Properties": Object {
        "GroupDescription": "Default/Test/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:UDP 2457",
            "FromPort": 2457,
            "IpProtocol": "udp",
            "ToPort": 2457,
          },
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "TestVPCBD247556",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "TestVPCBD247556",
                      "CidrBlock",
                    ],
                  },
                  ":80",
                ],
              ],
            },
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TestService2D8F51A4": Object {
      "DependsOn": Array [
        "TestLoadBalancerListenerE0D6931B",
        "TestLoadBalancerListenerTargetsGroup11BB5877",
      ],
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 2,
          },
          Object {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "TestCluster4BB28665",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": Array [
          Object {
            "ContainerName": "server",
            "ContainerPort": 2457,
            "TargetGroupArn": Object {
              "Ref": "TestLoadBalancerListenerTargetsGroup11BB5877",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "TestSecurityGroupA462EC75",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "TestVPCPrivateSubnet1Subnet9269A3EC",
              },
              Object {
                "Ref": "TestVPCPrivateSubnet2Subnet5C35C892",
              },
            ],
          },
        },
        "PlatformVersion": "1.4.0",
        "TaskDefinition": Object {
          "Ref": "TestTaskDef3F410569",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "TestTaskDef3F410569": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": "raykrueger/valheim",
            "MountPoints": Array [
              Object {
                "ContainerPath": "/root/.config/unity3d/IronGate/Valheim",
                "ReadOnly": false,
                "SourceVolume": "efsVolume",
              },
            ],
            "Name": "server",
            "PortMappings": Array [
              Object {
                "ContainerPort": 2457,
                "HostPort": 2457,
                "Protocol": "udp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "SERVER_PASSWORD",
                "ValueFrom": Object {
                  "Ref": "TestGeneratedServerPasswordSecret16788AEC",
                },
              },
            ],
          },
          Object {
            "Essential": true,
            "Image": "nginx:alpine",
            "Name": "nginx",
            "PortMappings": Array [
              Object {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "TestTaskDefExecutionRole8359E5BD",
            "Arn",
          ],
        },
        "Family": "TestTaskDef5D7B2C47",
        "Memory": "8192",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TestTaskDefTaskRole566D438B",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "EfsVolumeConfiguration": Object {
              "FileSystemId": Object {
                "Ref": "TestMyEfsFileSystem8F7C7AD3",
              },
            },
            "Name": "efsVolume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TestTaskDefExecutionRole8359E5BD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTaskDefExecutionRoleDefaultPolicy12538622": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "TestGeneratedServerPasswordSecret16788AEC",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTaskDefExecutionRoleDefaultPolicy12538622",
        "Roles": Array [
          Object {
            "Ref": "TestTaskDefExecutionRole8359E5BD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTaskDefTaskRole566D438B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestVPCBD247556": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "TestVPCIGW5436B3B0": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "TestVPCPrivateSubnet1DefaultRoute7F00A816": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "TestVPCPublicSubnet1NATGateway0F71D939",
        },
        "RouteTableId": Object {
          "Ref": "TestVPCPrivateSubnet1RouteTableA8347256",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPrivateSubnet1RouteTableA8347256": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPrivateSubnet1RouteTableAssociation2B8F186E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVPCPrivateSubnet1RouteTableA8347256",
        },
        "SubnetId": Object {
          "Ref": "TestVPCPrivateSubnet1Subnet9269A3EC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPrivateSubnet1Subnet9269A3EC": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCPrivateSubnet2DefaultRoute9AC8846C": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "TestVPCPublicSubnet2NATGatewayFA73821F",
        },
        "RouteTableId": Object {
          "Ref": "TestVPCPrivateSubnet2RouteTableB305344B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPrivateSubnet2RouteTableAssociation8E8A673E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVPCPrivateSubnet2RouteTableB305344B",
        },
        "SubnetId": Object {
          "Ref": "TestVPCPrivateSubnet2Subnet5C35C892",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPrivateSubnet2RouteTableB305344B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPrivateSubnet2Subnet5C35C892": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCPublicSubnet1DefaultRoute59DE5C9B": Object {
      "DependsOn": Array [
        "TestVPCVPCGWCE035ECF",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "TestVPCIGW5436B3B0",
        },
        "RouteTableId": Object {
          "Ref": "TestVPCPublicSubnet1RouteTable93F48482",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPublicSubnet1EIP919FBCB7": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "TestVPCPublicSubnet1NATGateway0F71D939": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "TestVPCPublicSubnet1EIP919FBCB7",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "TestVPCPublicSubnet1Subnet27931817",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "TestVPCPublicSubnet1RouteTable93F48482": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPublicSubnet1RouteTableAssociation2295DE4C": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVPCPublicSubnet1RouteTable93F48482",
        },
        "SubnetId": Object {
          "Ref": "TestVPCPublicSubnet1Subnet27931817",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPublicSubnet1Subnet27931817": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCPublicSubnet2DefaultRouteBF0B8D60": Object {
      "DependsOn": Array [
        "TestVPCVPCGWCE035ECF",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "TestVPCIGW5436B3B0",
        },
        "RouteTableId": Object {
          "Ref": "TestVPCPublicSubnet2RouteTable3C6223D9",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "TestVPCPublicSubnet2EIP6E4BF0EC": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "TestVPCPublicSubnet2NATGatewayFA73821F": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "TestVPCPublicSubnet2EIP6E4BF0EC",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "TestVPCPublicSubnet2Subnet3C04BDB2",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "TestVPCPublicSubnet2RouteTable3C6223D9": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "TestVPCPublicSubnet2RouteTableAssociationA7D0ED50": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "TestVPCPublicSubnet2RouteTable3C6223D9",
        },
        "SubnetId": Object {
          "Ref": "TestVPCPublicSubnet2Subnet3C04BDB2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "TestVPCPublicSubnet2Subnet3C04BDB2": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/Test/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "TestVPCVPCGWCE035ECF": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "TestVPCIGW5436B3B0",
        },
        "VpcId": Object {
          "Ref": "TestVPCBD247556",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;
